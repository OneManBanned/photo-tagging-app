/* ==========================================================================
   Resets
   ========================================================================== */

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  width: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-image: url("/images/background.png");
  background-size: 200% 200%;
  background-position: top center;
}

/* ==========================================================================
   Variables
   ========================================================================== */

:root {
  /* Sizes */
  --puzzle-height: 500px;
  --number-of-puzzles: 5;
  --number-of-headshots: 3;
  --puzzle-select-container-gap: 1rem;
  --lens-size: 140px;

  /* Borders */
  --border: 2px solid black;
  --border-image: url("/images/box.png") 50 50 50 50 / 20px 20px 20px 20px / 5px
    5px 5px 5px repeat repeat;

  /* Colors */
  --white: #fff;
  --black: #000;
  --gray-dark: #1a1a1a;
  --red: #f00;

  /* Fonts */
  --font-title: "Bubblegum Sans", sans-serif;
  --font-timer: "Comic Neue", sans-serif;
}

/* ==========================================================================
   Layout
   ========================================================================== */

#game-view {
  display: grid;
  grid-template-rows: auto 1fr;
  grid-template-columns: auto 1fr;
  background: var(--white);
  padding: 1rem;
  border: var(--border);
  border-image: var(--border-image);
}

#status-bar {
  position: relative;
  grid-row: 1;
  grid-column: 1 / 3;
  display: flex;
  justify-content: space-between;
  margin-bottom: 1rem;
  border: var(--border);
  border-image: var(--border-image);
}

#puzzle-container {
  position: relative;
  display: flex;
  grid-row: 2;
  grid-column: 1 / 2;
  margin-right: 1rem;
}

#puzzle-selection {
  grid-row: 2;
  grid-column: 2 / 3;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  gap: var(--puzzle-select-container-gap);
  height: calc(
    var(--puzzle-height) -
      (var(--puzzle-select-container-gap) * (var(--number-of-puzzles) - 1))
  );
}

/* ==========================================================================
   Components
   ========================================================================== */

h1 {
  font-family: var(--font-title);
  font-size: 2rem;
}

#timer-wrapper {
  width: 10%;
  aspect-ratio: 1 / 1;
  background: url("/images/circle.png") no-repeat center;
  background-size: cover;
  background-color: var(--white);
  clip-path: circle(35% at 50% 53%);
  overflow: hidden;
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#timer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: calc(100% - 500px);
  aspect-ratio: 1 / 1;
  font-family: var(--font-timer);
  font-size: 1.15rem;
  background: var(--white);
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1;
}

#playerStatus,
#opponentStatus {
  background: var(--white);
  padding: 0.25rem 1rem;
  flex: 1;
}

#opponentStatus {
  text-align: right;
}

#currentPuzzle {
  height: var(--puzzle-height);
  aspect-ratio: 8 / 5;
  object-fit: cover;
  border: var(--border);
  border-image: var(--border-image);
  transform: rotate(0deg);
  overflow: hidden;
  transition:
    transform 0.2s ease-in-out,
    opacity 0.3s ease-in-out;
}


#currentPuzzle:hover {
  cursor: none;
}

.puzzleSelect-container {
  display: flex;
  position: relative;
  z-index: 0;
  padding: 0.1rem;
  flex-direction: row;
  border: var(--border);
  border-image: var(--border-image);
  height: calc(100% / var(--number-of-puzzles));
}

.puzzle {
  width: 100%;
  object-fit: cover;
}

.headshot-container {
  display: flex;
  flex-direction: column;
  padding-left: 0.25rem;
  justify-content: space-evenly;
  height: 100%;
}

.headshot-wrapper {
  position: relative;
  height: calc(100% / var(--number-of-headshots));
  aspect-ratio: 1 / 1;
}

.headshot {
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

.overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  pointer-events: none;
}

#magnifier {
  position: absolute;
  width: var(--lens-size);
  height: var(--lens-size);
  border-radius: 50%;
  border: 8px solid var(--black);
  background-repeat: no-repeat;
  pointer-events: none;
  display: none;
  z-index: 1;
  justify-content: center;
  align-items: center;
  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.3);
}

.lens-content {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-repeat: no-repeat;
  border-radius: 50%;
  filter: blur(0px); 
  transition: filter 1s ease-in, opacity 0.3s ease;
}

#magnifier .glass-effect {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: radial-gradient(
    circle at 30% 30%,
    rgba(255, 255, 255, 0.3),
    transparent 70%
  );
  pointer-events: none;
}

#magnifier::after {
  content: "";
  position: absolute;
  width: 16px;
  height: 30px;
  background: linear-gradient(to right, var(--gray-dark), var(--black));
  border-radius: 5px;
  bottom: -20px;
  right: -10px;
  transform: rotate(135deg);
  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
}

/* ==========================================================================
   States
   ========================================================================== */

#puzzle-container.flipped #currentPuzzle {
  transform: rotate(180deg); 
}
#puzzle-container:not(.flipped) #currentPuzzle {
  transform: rotate(0deg); 
}
#puzzle-container.flipped .lens-content {
  transform: rotate(180deg); 
}
#puzzle-container:not(.flipped) .lens-content {
  transform: rotate(0deg); 
}


#magnifier.targeting .lens-content::before {
  width: 30px;
  height: 2px;
  border-radius: 0;
  background: var(--black);
}

#magnifier.targeting .lens-content::after {
  content: "";
  position: absolute;
  width: 2px;
  height: 30px;
  background: var(--black);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* ==========================================================================
   Animations
   ========================================================================== */


.wally-found-bg,
.wally-white-circle,
.wally-headshot {
  left: var(--wally-start-x);
  top: var(--wally-start-y);
}

.lens-content::before {
  content: "";
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--black);
  border-radius: 50%;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

#magnifier.targeting .lens-content::after {
  content: "";
  position: absolute;
  width: 2px;
  height: 25px;
  background: var(--black);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@keyframes spinToUpsideDown {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(180deg);
  }
}

@keyframes spinToNormal {
  0% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

#currentPuzzle.spin-to-upside-down {
  animation: spinToUpsideDown 1s ease-in-out forwards;
}

#currentPuzzle.spin-to-normal {
  animation: spinToNormal 0.5s ease-in-out forwards;
}

#puzzle-container canvas {
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  width: 100% !important;
  height: 100% !important;
  z-index: 2 !important;
  pointer-events: none !important;
}

#puzzle-container.shake {
  animation: shake 0.5s ease-in-out;
}

@keyframes shake {
  0% {
    transform: rotate(0deg);
  }
  20% {
    transform: rotate(-2deg);
  }
  40% {
    transform: rotate(2deg);
  }
  60% {
    transform: rotate(-1deg);
  }
  80% {
    transform: rotate(1deg);
  }
  100% {
    transform: rotate(0deg);
  }
}


.wally-found-bg {
  position: absolute;
  width: var(--lens-size);
  height: var(--lens-size);
  background: repeating-linear-gradient(
    #ff0000 0px,
    #ff0000 10px,
    #ffffff 10px,
    #ffffff 20px
  );
  transform-origin: center;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1; 
  }

.wally-found-bg-opponent {
  background: repeating-linear-gradient(#87CEEB 0px, #87CEEB 10px, #ffffff 10px, #ffffff 20px);
  border: 5px white solid;
}

.wally-found-bg.fill {
  animation: bgFill 1s ease-in-out forwards;
  border: 5px white solid;
}

.wally-found-bg.traverse {
  animation: bgTraverse 1s ease-in-out forwards;
  border: 5px white solid;
}

@keyframes bgFill {
  0% {
    opacity: 0;
    transform: scale(0.2);
  }
  10%{
      opacity: 1;
  }
  50% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(0.9);
  }
}

@keyframes bgTraverse {
  0% {
    opacity: 1;
    transform: scale(0.9);
  }
  50% {
    opacity: 1;
    left: calc(var(--wally-end-x) + 50px);
    top: calc(var(--wally-end-y) - 100px);
    transform: scale(0.9) rotate(360deg);
  }
  100% {
    opacity: 1;
    left: var(--wally-end-x);
    top: var(--wally-end-y);
    transform: scale(0.5) rotate(720deg);
  }
}

.wally-found-bg.spread {
  animation: bgSpread 0.5s ease-in-out forwards !important;
  width: var(--thumb-width);
  height: var(--thumb-height);
  left: 50% !important;
  top: 50% !important;
  transform-origin: center;
  position: absolute;
}

@keyframes bgSpread {
  0% {
    opacity: 1;
    width: var(--lens-size);
    height: var(--lens-size);
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0.5) rotate(720deg);
  }
  80% {
    opacity: 1;
    width: calc(var(--thumb-width) * 1.1);
    height: calc(var(--thumb-height) * 1.1);
    border-radius: 0;
    transform: translate(-50%, -50%) scale(1) rotate(720deg);
  }
  100% {
    opacity: 1;
    width: var(--thumb-width);
    height: var(--thumb-height);
    border-radius: 0;
    transform: translate(-50%, -50%) scale(1) rotate(720deg);
  }
}

.wally-white-circle {
  position: absolute;
  width: var(--lens-size);
  height: var(--lens-size);
  pointer-events: none;
  z-index: 2; 
}

.wally-white-circle.fill {
  animation: bgFill 1s ease-in-out forwards; /* Reuse bgFill for simplicity */
}

.wally-white-circle.traverse {
  animation: bgTraverse 1s ease-in-out forwards; /* Sync with bg */
  transform-origin: center;
}

.wally-white-circle.spread {
  animation: whiteCircle 0.5s ease-in-out forwards !important;
  left: 50% !important;
  top: 50% !important;
  transform-origin: center;
  background: var(--white);
  border-radius: 50%;
}

@keyframes whiteCircle {
  0% {
    opacity: 0;
    width: 100px;
    height: 100px;
    transform: translate(-50%, -50%) scale(0.5) rotate(720deg);
  }
  20% {
    opacity: 1;
  }
  100% {
    opacity: 1;
    width: 120px;
    height: 120px;
    transform: translate(-50%, -50%) scale(0.5) rotate(720deg);
  }
}

.wally-headshot {
  position: absolute;
  width: var(--lens-size);
  height: var(--lens-size);
  border-radius: 50%;
  pointer-events: none;
  z-index: 3; }

.wally-headshot.fill {
  animation: wallyFill 1s ease-in-out forwards;
}

.wally-headshot.traverse {
  animation: wallyTraverse 1s ease-in-out forwards;
}

@keyframes wallyFill {
  0% {
    transform: scale(0.2);
  }
  10% {
    opacity: 1;
  }
  50% {
    transform: scale(0.8);
  }
  100% {
    transform: scale(0.8);
  }
}

@keyframes wallyTraverse {
  0% {
    opacity: 1;
    transform: scale(0.9);
  }
  50% {
    opacity: 1;
    left: calc(var(--wally-end-x) + 50px);
    top: calc(var(--wally-end-y) - 100px);
    transform: scale(0.9) rotate(360deg);
  }
  100% {
    opacity: 1;
    left: var(--wally-end-x);
    top: var(--wally-end-y);
    transform: scale(0.5) rotate(720deg);
  }
}

.wally-headshot.spread {
  animation: wallySpread 0.5s ease-in-out forwards !important;
  left: 50% !important;
  top: 50% !important;
  transform-origin: center;
}

@keyframes wallySpread {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(0.5) rotate(720deg);
  }
  100% {
    opacity: 1;
    width: 70%;
    height: auto;
    transform: translate(-50%, -50%) scale(0.5) rotate(720deg);
  }
}

.blurred-lens {
  filter: blur(4px) !important; 
}

.lens-content.fade-out {
  opacity: 0;
}
